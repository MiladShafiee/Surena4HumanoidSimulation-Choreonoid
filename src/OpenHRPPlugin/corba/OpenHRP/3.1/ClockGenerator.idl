#ifndef OPENHRP_CLOCK_GENERATOR_IDL_INCLUDED
#define OPENHRP_CLOCK_GENERATOR_IDL_INCLUDED

#include <OpenRTM.idl>

module OpenHRP {

  /**
   * @if jp
   * @brief シミュレーション世界の時刻に基づいて、登録されている外部トリガ付き実行コンテキストにクロックを送信する
   *
   * 登録された実行コンテキストが要求する時間刻みがシミュレーションの時間刻みの倍数でない場合、シミュレーション時刻がクロックを送信すべき時刻以降になった瞬間に送信される.
   *
   * 例) シミュレーションの時間刻みが2[ms]、実行コンテキストの実行周期が3[ms]である場合、実行コンテキストには0, 4, 6, 10,...[ms]でクロックが送信される。
   * @endif
   */
  interface ClockGenerator
  {
    /**
     * @if jp
     * @brief ecをクロックの送信対象として登録する。
     * @param ec クロックの送信対象となる外部トリガ付き実行コンテキスト
     * @param period クロックを送信して欲しい間隔[s]
     * @endif
     */
#ifdef OPENRTM_VERSION_042
    void subscribe(in RTC::ExtTrigExecutionContextService ec, in double period);
#else
    void subscribe(in OpenRTM::ExtTrigExecutionContextService ec, in double period);
#endif

    /**
     * @if jp
     * @brief ecをクロックの送信対象から削除する。
     * @param ec クロックの送信対象から削除する外部トリガ付き実行コンテキスト 
     * @endif
     */
#ifdef OPENRTM_VERSION_042
    void unsubscribe(in RTC::ExtTrigExecutionContextService ec);
#else
    void unsubscribe(in OpenRTM::ExtTrigExecutionContextService ec);
#endif
  };
};

#endif
